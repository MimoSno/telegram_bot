import time

# –ò–º–ø–æ—Ä—Ç—ã –∏–∑ aiogram'–∞
import telebot
from telebot import types

from config import TOKEN, connect, cursor

bot = telebot.TeleBot(TOKEN)

name = None
surname = None
user_age = None
edit = "no"
black_list_counter = 5
user_black_list_counter = 0


def reset():
    global name
    global surname
    global user_age
    name = None
    surname = None
    user_age = None


@bot.message_handler(content_types=['text'])
def start(message):
    global name, surname, user_age
    if message.text == '/start':
        # –≠—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω—É–∂–Ω—ã –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ë–∞–∑–æ–π –î–∞–Ω–Ω—ã—Ö

        global user_id
        user_id = message.from_user.id

        cursor.execute(f"SELECT user_id FROM data WHERE user_id = {user_id}")
        if cursor.fetchone() is None:
            global name, surname, user_age

            cursor.execute(f"INSERT INTO data VALUES(?,?,?,?)", (user_id, name, surname, user_age))
            connect.commit()  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            bot.send_message(message.from_user.id, "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
            bot.register_next_step_handler(message, get_name)  # —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ ‚Äì —Ñ—É–Ω–∫—Ü–∏—è get_name
        else:
            bot.send_message(message.from_user.id, '–í—ã —É–∂–µ –ø—Ä–æ–≤–æ–¥–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é')

            # –í—Å–µ —ç—Ç–∏ –º–∞—Ö–∏–Ω–∞—Ü–∏–∏ –Ω—É–∂–Ω—ã –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
            # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î
            cursor.execute(f"SELECT * FROM data WHERE user_id={user_id}")
            db_data = list(cursor.fetchone())
            print(db_data)
            name = db_data[1]
            print(name)
            surname = db_data[2]
            print(surname)
            user_age = db_data[3]
            print(user_age)

            # –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
            keyboard = types.InlineKeyboardMarkup()  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            key_yes = types.InlineKeyboardButton(text='‚úÖ–î–∞', callback_data='yes')  # –∫–Ω–æ–ø–∫–∞ ¬´–î–∞¬ª
            keyboard.add(key_yes)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            key_no = types.InlineKeyboardButton(text='‚ùå–ù–µ—Ç', callback_data='no')
            keyboard.add(key_no)
            question = '–¢–µ–±–µ ' + str(user_age) + ' –ª–µ—Ç, —Ç–µ–±—è –∑–æ–≤—É—Ç ' + str(name) + ' ' + str(surname) + '?'
            bot.send_message(message.from_user.id, text=question, reply_markup=keyboard)
            reset()

    else:
        bot.send_message(message.from_user.id, '–ù–∞–ø–∏—à–∏ /start')


def get_name(message):  # –ø–æ–ª—É—á–∞–µ–º —Ñ–∞–º–∏–ª–∏—é
    global name
    name = message.text
    # –≠—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω—É–∂–Ω—ã –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ë–∞–∑–æ–π –î–∞–Ω–Ω—ã—Ö

    if edit == "yes":
        global edit_name
        edit_name = message.text
        cursor.execute(f"UPDATE data SET user_name = ? WHERE user_id = ?", (edit_name, user_id))
        connect.commit()
        edit_name = None
        bot.send_message(message.from_user.id, '–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ñ–∞–º–∏–ª–∏—è?')
        bot.register_next_step_handler(message, get_surname)
    else:
        cursor.execute(f"SELECT user_name FROM data WHERE user_id = {user_id}")
        print(cursor.fetchone())
        print(type(cursor.fetchone()))
        if cursor.fetchone() is None:
            cursor.execute(f"UPDATE data SET user_name = ? WHERE user_id = ?", (name, user_id))
            connect.commit()  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        name = ""
        bot.send_message(message.from_user.id, '–ö–∞–∫–∞—è —É —Ç–µ–±—è —Ñ–∞–º–∏–ª–∏—è?')
        bot.register_next_step_handler(message, get_surname)


def get_surname(message):
    global surname
    surname = message.text
    # –≠—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω—É–∂–Ω—ã –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ë–∞–∑–æ–π –î–∞–Ω–Ω—ã—Ö

    if edit == "yes":
        global edit_surname
        edit_surname = message.text
        cursor.execute(f"UPDATE data SET user_surname = ? WHERE user_id = ?", (edit_surname, user_id))
        connect.commit()
        edit_surname = None
        bot.send_message(message.from_user.id, "–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
        bot.register_next_step_handler(message, get_age)
    else:
        cursor.execute(f"SELECT user_surname FROM data WHERE user_id = {user_id}")
        print(cursor.fetchone())
        print(type(cursor.fetchone()))
        if cursor.fetchone() is None:
            cursor.execute(f"UPDATE data SET user_surname = ? WHERE user_id = ?", (surname, user_id))
            connect.commit()  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        surname = ""
        bot.send_message(message.from_user.id, "–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?")
        bot.register_next_step_handler(message, get_age)


def get_age(message):
    global user_age
    if edit == "yes":

        global edit_age
        edit_age = message.text
        cursor.execute(f"UPDATE data SET user_age = ? WHERE user_id = ?", (edit_age, user_id))
        connect.commit()
        edit_age = None
        bot.send_message(message.from_user.id, "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã")
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å, —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
        bot.message_handler(message, result)
    else:

        user_age = message.text
        cursor.execute(f"SELECT user_age FROM data WHERE user_id = {user_id}")
        print(cursor.fetchone())
        if cursor.fetchone() is None:
            cursor.execute(f"UPDATE data SET user_age = ? WHERE user_id = ?", (user_age, user_id))
            connect.commit()  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        user_age = 0

        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î
        cursor.execute(f"SELECT * FROM data WHERE user_id={user_id}")
        db_data_2 = list(cursor.fetchone())
        question_name = db_data_2[1]
        question_surname = db_data_2[2]
        question_user_age = db_data_2[3]
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        keyboard = types.InlineKeyboardMarkup()  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        key_yes = types.InlineKeyboardButton(text='‚úÖ–î–∞', callback_data='yes')  # –∫–Ω–æ–ø–∫–∞ ¬´–î–∞¬ª
        keyboard.add(key_yes)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        key_no = types.InlineKeyboardButton(text='‚ùå–ù–µ—Ç', callback_data='no')
        keyboard.add(key_no)
        question = '–¢–µ–±–µ ' + str(question_user_age) + ' –ª–µ—Ç, —Ç–µ–±—è –∑–æ–≤—É—Ç ' + str(question_name) + ' ' + str(
            question_surname) + '?'
        question_name = None
        question_surname = None
        question_user_age = None
        bot.send_message(message.from_user.id, text=question, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    if call.data == "yes":  # call.data —ç—Ç–æ callback_data, –∫–æ—Ç–æ—Ä—É—é –º—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="–í–∞—à –æ—Ç–≤–µ—Ç: –î–∞")
        bot.send_message(call.message.chat.id, '–ó–∞–ø–æ–º–Ω—é : )')
        markup_reply = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        data_delete = types.KeyboardButton('üóë–£–¥–∞–ª–∏—Ç—å')
        data_edit = types.KeyboardButton('‚úç–ò–∑–º–µ–Ω–∏—Ç—å')
        user_exit = types.KeyboardButton('üîö–í—ã–π—Ç–∏')
        markup_reply.add(data_edit, data_delete, user_exit)
        bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å, —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏",
                         reply_markup=markup_reply)
        bot.register_next_step_handler(call.message, result)
    elif call.data == "no":
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text="–í–∞—à –æ—Ç–≤–µ—Ç: –ù–µ—Ç")
        reset()
        bot.send_message(call.message.chat.id, '–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /start')


def result(message):
    global name
    global surname
    global user_age
    if message.text == 'üóë–£–¥–∞–ª–∏—Ç—å':
        bot.send_message(message.from_user.id, "–ù–∞—á–∞–ª–∞—Å—å –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...")

        cursor.execute(f"DELETE FROM data WHERE user_id = {user_id}")
        connect.commit()

        time.sleep(1.3)
        bot.send_message(message.from_user.id, "–î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã")
    elif message.text == '‚úç–ò–∑–º–µ–Ω–∏—Ç—å':
        global edit
        edit = "yes"

        bot.send_message(message.from_user.id, "–ù–∞—á–∞–ª–∞—Å—å –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...")
        time.sleep(1.3)
        bot.send_message(message.from_user.id, "–ó–∞–ø—Ä–æ—Å –î–∞–Ω–Ω—ã—Ö —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
        time.sleep(1.3)
        bot.send_message(message.from_user.id, "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        bot.register_next_step_handler(message, get_name)

    elif message.text == 'üîö–í—ã–π—Ç–∏':
        bot.send_message(message.from_user.id, "–ù–∞—á–∞—Ç–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –≤—ã—Ö–æ–¥–∞...")
        time.sleep(1.3)
        bot.send_message(message.from_user.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏")
        bot.register_next_step_handler(message, start)
    else:
        bot.send_message(message.from_user.id, '–ö–æ–º–∞–Ω–¥–∞ –≤–≤–µ–¥–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ')
        bot.register_next_step_handler(message, result)


bot.polling(none_stop=True, interval=0)
